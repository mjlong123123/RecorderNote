/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "com_android_recordernote_jni_Speex.h"
#include "customspeex.h"
/* Header for class com_android_recordernote_jni_Speex */

static CustomSpeex * speex;
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_android_recordernote_jni_Speex
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_android_recordernote_jni_Speex_init
  (JNIEnv * env, jclass cla){
	speex = new CustomSpeex();
}

/*
 * Class:     com_android_recordernote_jni_Speex
 * Method:    release
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_android_recordernote_jni_Speex_release
  (JNIEnv * env, jclass cla){
	delete(speex);
	speex = 0;
}

/*
 * Class:     com_android_recordernote_jni_Speex
 * Method:    encode
 * Signature: ([S[B)I
 */
JNIEXPORT jint JNICALL Java_com_android_recordernote_jni_Speex_encode
  (JNIEnv * env, jclass cla, jshortArray sa, jbyteArray ba){
	jshort * in = env->GetShortArrayElements(sa,0);
	jsize insize = env->GetArrayLength(sa);
	jbyte * out = env->GetByteArrayElements(ba,0);
	jsize outsize = env->GetArrayLength(ba);
	speex->encode((short *)in,(char *)out,160);
	env->ReleaseShortArrayElements(sa,in,0);
	env->ReleaseByteArrayElements(ba,out,0);
	return 1;
}

/*
 * Class:     com_android_recordernote_jni_Speex
 * Method:    decode
 * Signature: ([B[S)I
 */
JNIEXPORT jint JNICALL Java_com_android_recordernote_jni_Speex_decode
  (JNIEnv * env, jclass cla, jbyteArray ba, jshortArray sa){

	jshort * out = env->GetShortArrayElements(sa,0);
	jsize outsize = env->GetArrayLength(sa);
	jbyte * in = env->GetByteArrayElements(ba,0);
	jsize insize = env->GetArrayLength(ba);
	speex->decode((char *)in,(short *)out,160);
	env->ReleaseShortArrayElements(sa,out,0);
	env->ReleaseByteArrayElements(ba,in,0);
	return 1;
}

#ifdef __cplusplus
}
#endif
